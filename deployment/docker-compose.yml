version: '3.8'

services:
  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY:-rudnex-secret-key-2025-super-secure}
      - ADMIN_TOKEN=${ADMIN_TOKEN:-rudnex-admin-2025}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SMTP_SERVER=${SMTP_SERVER:-mail.rudnex.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - EMAIL_USER=${EMAIL_USER:-help@rudnex.com}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:8000}
    volumes:
      - ../backend/uploads:/app/uploads
      - ../backend/outputs:/app/outputs
      - ../backend/content:/app/content
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
      - VITE_APP_NAME=Rudnex Digital Hub
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # Optional: Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: PostgreSQL for production database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=rudnex_digital
      - POSTGRES_USER=${POSTGRES_USER:-rudnex}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rudnex_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
